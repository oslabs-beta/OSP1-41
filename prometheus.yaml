global: 
  # how often Prometheus will scrape the metrics
  scrape_interval: 8s
  # how often Prometheus will evaluate the rules
  evaluation_interval: 8s
  
  # apiVersion - specifies the version of the Kubernetes API that this manifest is written for

  # data - defines the data stored in the ConfigMap
    # in their case, the key is "grafana.ini" and the value is a path to Grafana (?)

  # kind - specifies the type of Kubernetes resource being defined. In theri case, it is a ConfigMap
  
  # metadata - contains metadata about the Kubernetes resource being defined,
    # including various annotations, labels, and identifying information
    # annotations - key-value pairs of annotations associated with the ConfigMap
    # annotations provide additional information with keys
    # creationTimestamp - the timestamp representing when the ConfigMap was created
    # labels - key-value pairs of labels assigned to the ConfigMap
      # labels are used to categorize and identify resources. In their case, the ConfigMap has several labels:
      # app.kubernetes.io/instance: prometheus: This label likely identifies the instance or deployment of the application, in this case, related to Prometheus.

# app.kubernetes.io/managed-by: Helm
  # indicates that the ConfigMap is managed by Helm, a package manager for Kubernetes.

# app.kubernetes.io/name: grafana 
  # identifies the name of the application, which is Grafana in this case.

# app.kubernetes.io/version: 9.5.2
  # represents the version of the application, which is 9.5.2.

# helm.sh/chart: grafana-6.56.5
  # specifies the Helm chart used to deploy Grafana, and the version being used is 6.56.5.

# name - the name of the ConfigMap

# namepspace - specifies the namespace in which the ConfigMap is being created

# resourceVersion - the resource version for this ConfigMap

# uid - the unique identifier for this ConfigMap
